# documentation: https://doc.evolution-api.com/
# slogan: Robust platform dedicated to providing a comprehensive and integrated API across multiple platforms and services.
# tags: api
# logo: svgs/evolution-api.png
# port: 8080

services:
  evolution-api:
    image: atendai/evolution-api-lite:latest
    environment:
      - SERVICE_FQDN_DOCUSEAL_8080
      - AUTHENTICATION_API_KEY=${SERVICE_PASSWORD_EVOLUTION-API}
      - CACHE_REDIS_ENABLED=true
      - CACHE_REDIS_URI=redis://${REDIS_HOST:-redis}:${REDIS_PORT:-6379}/6
      - CACHE_REDIS_PREFIX_KEY=evolution
      - CACHE_REDIS_SAVE_INSTANCES=false
      - CACHE_LOCAL_ENABLED=false
      - DATABASE_ENABLED=true
      - DATABASE_PROVIDER=postgresql
      - DATABASE_CONNECTION_URI=postgresql://$SERVICE_USER_POSTGRES:$SERVICE_PASSWORD_POSTGRES@postgresql:5432/${POSTGRES_DB}
      - DATABASE_CONNECTION_CLIENT_NAME=evolution_exchange
      - DATABASE_SAVE_DATA_INSTANCE=true
      - DATABASE_SAVE_DATA_NEW_MESSAGE=true
      - DATABASE_SAVE_MESSAGE_UPDATE=true
      - DATABASE_SAVE_DATA_CONTACTS=true
      - DATABASE_SAVE_DATA_CHATS=true
      - DATABASE_SAVE_DATA_LABELS=true
      - DATABASE_SAVE_DATA_HISTORIC=true
    volumes:
      - evolution-api-instance:/evolution/instances
    depends_on:
      redis:
        condition: service_started
      postgresql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://127.0.0.1:8080"]
      interval: 5s
      timeout: 20s
      retries: 10
  redis:
    image: "redis:latest"
    volumes:
      - "redis_data:/data"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 20s
      retries: 10
  postgresql:
    image: postgres:16-alpine
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=$SERVICE_USER_POSTGRES
      - POSTGRES_PASSWORD=$SERVICE_PASSWORD_POSTGRES
      - POSTGRES_DB=${POSTGRES_DB:-evolution}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 20s
      retries: 10